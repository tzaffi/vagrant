# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Push this image to atlas as below:
  #config.push.define "atlas" do |push|
  #  push.app = "tzaffi/ubuntujava71"
  #end

  config.vm.provider "virtualbox" do |v|
    v.name = "ubuntujava71"
  end

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  # Marruda's box has Java 7, Ubuntu 14.04.2 (trusty), Java 1.7.79, Maven 3.0.5, and Git 1.9.1:
  config.vm.box = "marruda/trusty64-java-all"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # E.G. accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8081
  #
  # COMMENT OUT FOR BASE BOX
  #$forwarded_ports = [8080, 8443]
  #setup_forwarded_ports config, $forwarded_ports

  # ADDITIONAL INSTALLATIONS:
  $required_packages = %W{g++ make python-setuptools curl build-essential python-software-properties emacs}
  $java_packages = %W{tomcat7 tomcat7-admin}

  install_default_packages config, $required_packages
  install_default_packages config, $java_packages

  # THIS FINAL CALL IS FOR SCRIPTS THAT ARE TOO COMPLICATED FOR apt-get
  $global_custom_install_scripts = setup_global_custom_install_scripts
  install_custom_packages config, $global_custom_install_scripts


  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   sudo apt-get update
  #   sudo apt-get install -y apache2
  # SHELL
end

# CUSTOM SCRIPTS (i.e. functions)
def setup_forwarded_ports(config, forwarded_ports)
  forwarded_ports.each do |forward_port|
    config.vm.network :forwarded_port, host: forward_port, guest: forward_port
  end
end

def install_default_packages(config, packages_to_install)
  config.vm.provision :shell, :inline => "cd && sudo apt-get update"
  packages_to_install.each do |pkg|
    config.vm.provision :shell, :inline => "cd && sudo apt-get -y install #{pkg}"
  end
end

def install_custom_packages(config, custom_package_install_scripts)
  custom_package_install_scripts.each do |install_script|
    config.vm.provision :shell, :inline => install_script
  end
end

def setup_global_custom_install_scripts
  # node:
  node_install_script = <<SCRIPT    
    cd
    curl -sL https://deb.nodesource.com/setup | sudo bash -
    sudo apt-get install -y nodejs
SCRIPT
  # mysql with standard root credentials:
  mysql_script = <<SCRIPT
      sudo debconf-set-selections <<< 'mysql-server-5.5 mysql-server/root_password password root'
      sudo debconf-set-selections <<< 'mysql-server-5.5 mysql-server/root_password_again password root'
      sudo apt-get update
      sudo apt-get -y install mysql-server-5.5
SCRIPT
  [mysql_script, node_install_script]
end
